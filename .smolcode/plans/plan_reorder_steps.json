{
  "id": "plan_reorder_steps",
  "steps": [
    {
      "id": "implement_reorder_logic",
      "description": "Implement the Reorder(newStepOrder []string) method logic for the Plan struct.",
      "status": "DONE",
      "acceptance": [
        "Method signature is func (pl *Plan) Reorder(newStepOrder []string).",
        "Edge cases (empty newStepOrder, empty pl.Steps) are handled.",
        "Steps from newStepOrder are prioritized and correctly ordered.",
        "Remaining steps maintain their relative order and are appended.",
        "pl.Steps is updated correctly in memory."
      ]
    },
    {
      "id": "add_reorder_to_file",
      "description": "Edit planner/planner.go to include the new Reorder method.",
      "status": "DONE",
      "acceptance": [
        "Reorder method is correctly added to the Plan type in planner/planner.go."
      ]
    },
    {
      "id": "list_changes_reorder",
      "description": "Use list_changes to view the modifications.",
      "status": "DONE",
      "acceptance": [
        "Successfully listed file changes showing the new method."
      ]
    },
    {
      "id": "create_checkpoint_reorder",
      "description": "Create a checkpoint for the new Reorder method.",
      "status": "TODO",
      "acceptance": [
        "Checkpoint created successfully with a descriptive message."
      ]
    },
    {
      "id": "note_tool_planner_next_step",
      "description": "Acknowledge that exposing Reorder via tool_planner.go is a potential next step.",
      "status": "TODO",
      "acceptance": [
        "Note is made about future tool_planner.go update."
      ]
    }
  ]
}